stages:
    - pre
    - build
    - bundle

builder:
    stage: pre
    image: docker
    when: manual
    services:
        - name: docker:dind
          alias: docker
    variables:
        DOCKER_HOST: 'tcp://docker:2375'
    script:
        # Try to pull the image, it won't exist if this is the first time the CI has run.
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
        - docker pull ${CI_REGISTRY_IMAGE}/builder || true
        - docker build --cache-from ${CI_REGISTRY_IMAGE}/builder -t ${CI_REGISTRY_IMAGE}/builder .
        - docker push ${CI_REGISTRY_IMAGE}/builder

.build:
    stage: build
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
        GHIDRA_REPO: https://github.com/NationalSecurityAgency/ghidra.git
        GHIDRA_HEAD: ${TAG}
    script:
        - git clone "${GHIDRA_REPO}"
        - cd ghidra 
        - git remote update
        - git checkout ${GHIDRA_HEAD}
        - git log --oneline -n 15
        - gradle --init-script gradle/support/fetchDependencies.gradle init | grep -v Downloading
        - gradle buildGhidra
        - cd ../
    artifacts:
        paths:
            - ghidra/build/dist/*

.bundler:
    stage: bundle
    image: python:3.7-alpine
    tags:
        - docker
    variables:
        GHIDRA_APP_BUNDLE_REPO: https://gitlab.com/Torgo/ghidra-app-bundle.git
    script:
        - apk add git
        - apk add cdrkit
        - git clone "${GHIDRA_APP_BUNDLE_REPO}" bundler
        - cd bundler
        - pip3 install -r requirements.txt
        - ./update.py --dmg --version ${GHIDRA_VERSION} --path ../ghidra/build/dist/*.zip
        - cd ../
    artifacts:
        paths:
            - bundler/*.dmg

.build_docker:
    extends: .build
    image: ${CI_REGISTRY_IMAGE}/builder
    tags:
        - docker

linux/dev:
    extends: .build_docker
    variables:
        TAG: origin/master

macOS/dev:
    extends: .build
    variables:
        TAG: origin/master
    tags:
        - macOS

macOS/dmg/dev:
    extends: .bundler
    needs:
        - macOS/dev
    variables:
        GHIDRA_VERSION: "DEV"
    
# -----------------

linux/9.0.1:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.0.1_build

linux/9.0.2:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.0.2_build

linux/9.0.4:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.0.4_build

linux/9.1:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.1_build

macOS/9.1:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.1_build
    tags:
        - macOS

linux/9.1.1:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.1.1_build

macOS/9.1.1:
    extends: .build_docker
    when: manual
    variables:
        TAG: Ghidra_9.1.1_build
    tags:
        - macOS

linux/9.1.2:
    extends: .build_docker
    variables:
        TAG: Ghidra_9.1.2_build

macOS/9.1.2:
    extends: .build_docker
    variables:
        TAG: Ghidra_9.1.2_build
    tags:
        - macOS

macOS/dmg/9.1.2:
    extends: .bundler
    needs:
        - macOS/9.1.2
    variables:
        GHIDRA_VERSION: "9.1.2"

custom:
    when: manual
    extends: .build
